{"version":3,"sources":["Recipes.js","burger.png","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","maxWidth","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","Recipe","title","calories","image","ingredients","caution","classes","React","useState","expanded","setExpanded","className","Card","CardHeader","Avatar","aria-label","action","IconButton","toUpperCase","subheader","Date","toString","split","splice","join","CardMedia","CardContent","Typography","variant","color","component","CardActions","disableSpacing","clsx","onClick","aria-expanded","Collapse","in","timeout","unmountOnExit","paragraph","map","ingredient","text","margin","spacing","App","recipes","setRecipes","search","setSearch","query","setQuery","url","useEffect","a","fetch","response","json","jsonData","hits","console","log","getRecipies","class","src","Pic","href","type","data-bs-toggle","data-bs-target","aria-controls","id","onSubmit","e","preventDefault","placeholder","value","onChange","target","recipe","label","cautions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1c5f9f5d.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport \"./ii.css\"\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n}));\r\n\r\nexport default function Recipe ({title, calories, image, ingredients,caution}) {\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(false);\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n  return (\r\n      <div className=\"mainDivcol-md-auto\">\r\n    <Card className={classes.root}>\r\n      <CardHeader\r\n        avatar={\r\n          <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n            R\r\n          </Avatar>\r\n        }\r\n        action={\r\n          <IconButton aria-label=\"settings\">\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        }\r\n        title={title.toUpperCase()}\r\n        subheader={(new Date()).toString().split(' ').splice(1,3).join(' ')}\r\n      />\r\n      <CardMedia\r\n        className={classes.media}\r\n        image={image}\r\n        title=\"Paella dish\"\r\n      />\r\n      <CardContent>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n        <strong>Calories:</strong>{calories}\r\n          <br></br>\r\n          <strong>Caution:</strong>{caution}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions disableSpacing>\r\n        <IconButton aria-label=\"add to favorites\">\r\n          <FavoriteIcon />\r\n        </IconButton>\r\n        <IconButton aria-label=\"share\">\r\n          <ShareIcon />\r\n        </IconButton>\r\n        <IconButton\r\n          className={clsx(classes.expand, {\r\n            [classes.expandOpen]: expanded,\r\n          })}\r\n          onClick={handleExpandClick}\r\n          aria-expanded={expanded}\r\n          aria-label=\"show more\"\r\n        >\r\n          <ExpandMoreIcon />\r\n        </IconButton>\r\n      </CardActions>\r\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n        <CardContent>\r\n          <Typography paragraph><strong><em>Ingredients:</em></strong></Typography>\r\n          \r\n          {ingredients.map((ingredient)=>(\r\n         <>\r\n          <Typography paragraph>\r\n              {ingredient.text}\r\n            \r\n          </Typography>\r\n          <Typography paragraph>\r\n            \r\n          </Typography>\r\n         \r\n        </>\r\n        ))}\r\n        </CardContent>\r\n      </Collapse>\r\n    </Card>\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/burger.ed59f72a.png\";","import React, { useEffect, useState } from \"react\";\nimport Recipe from \"./Recipes\";\nimport{ useDispatch, useSelector } from 'react-redux'\nimport './App.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Pic from \"./burger.png\";\nimport { listFood } from './action'\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n}));\n\nfunction App() {\n\n\n        \n\n\n\n  const classes = useStyles();\n\n  const APP_ID =\"15c3a3ec\";\n  const APP_KEY = \"d1abd6d091e5106805f2ea52f50c56e7\";\n\n\n\n  const [recipes, setRecipes]= useState([]);\n  const [search, setSearch]= useState(\" \");\n  const [query, setQuery]= useState('chicken');\n\n  const url = `https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`\n  useEffect( ()=>{\n    const getRecipies= async()=>{\n      const response= await fetch(url);\n      const jsonData= await response.json();\n      setRecipes(jsonData.hits);\n      console.log(jsonData.hits);\n\n    }\n    getRecipies();\n\n  }, [query]);\n\n  const updateSearch= (e)=>{\n    setSearch(e.target.value);\n    //console.log(search);\n  }\n\n  const newSearch= (e)=>{\n    e.preventDefault();\n    setQuery(search);\n    setSearch('');\n  }\n\n \n\n  return (\n    <div className={classes.root}>\n      \n    <div className=\"App\">\n      \n       <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n  <div class=\"container-fluid\">\n    <img className=\"toresize\" src={Pic}></img>\n    <a class=\"navbar-brand\" href=\"#\"><strong>Recipe App</strong></a>\n    <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n        \n      </ul>\n      <form onSubmit={newSearch} class=\"d-flex\">\n        <input class=\"form-control me-2\" type=\"search\" placeholder=\"Search\"  value={search} onChange={updateSearch} aria-label=\"Search\"></input>\n        <button class=\"btn btn-outline-success\" type=\"search\">Search</button>\n      </form>\n    </div>\n  \n  </div>\n</nav>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n      \n\n\n\n\n       \n\n\n\n\n\n\n\n\n\n     \n       <div className=\"grid container\">\n      { recipes.map(recipe =>(\n        <Recipe key={recipe.recipe.label} title={recipe.recipe.label} caution={recipe.recipe.cautions} calories={recipe.recipe.calories} \n        image={recipe.recipe.image}\n        ingredients={recipe.recipe.ingredients}/>\n       \n      ))}\n\n      </div>\n     \n    </div>\n   <div className=\"copy\">&copy; Made By <strong>Sridhu</strong></div> \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}